import org.gradle.internal.os.OperatingSystem

buildscript {
    ext.kotlinVersion='1.0.6'
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M3'
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
    }
}
plugins {
    id 'org.springframework.boot' version '1.4.3.RELEASE'
}



apply plugin: 'maven'
apply plugin: 'kotlin'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: "kotlin-spring"

junitPlatform {
    enableStandardTestTask true
    filters {
        engines {
            include 'spek'
        }
    }
}

project.group = "me.shinn"
project.version = '0.4.0-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
}


dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.8.4"
    compile "javax.inject:javax.inject:1"
    compile("org.springframework.boot:spring-boot-starter-web:1.4.3.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-websocket")
    compile("org.springframework.boot:spring-boot-devtools")
    compile "io.reactivex.rxjava2:rxjava:2.0.4"
    compile project(':archiver-core')
    testCompile group: 'org.jetbrains.spek', name: 'spek-api', version: '1.1.0-beta2'
    testCompile "org.mockito:mockito-core:2.+"
    testCompile "com.nhaarman:mockito-kotlin:1.1.0"
    testRuntime group: 'org.jetbrains.spek', name: 'spek-junit-platform-engine', version: '1.1.0-beta2'
}

apply plugin: "kotlin"

bootRun {
    if ( project.hasProperty('dir') ) {
        args "--me.shinn.workingDir=${project.dir}"
    }
}

def buildCommand = ['cmd', '/c', 'npm','run', 'build']
if (!OperatingSystem.current().isWindows()) {
    buildCommand = buildCommand[2..-1]
}
task transpileWebApp(type: Exec) {
    workingDir './archiver-client'
    commandLine(buildCommand)
}


bootRepackage {
    excludeDevtools = true
}